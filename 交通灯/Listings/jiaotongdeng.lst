C51 COMPILER V9.54   JIAOTONGDENG                                                          11/18/2018 21:17:58 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE JIAOTONGDENG
OBJECT MODULE PLACED IN .\Objects\jiaotongdeng.obj
COMPILER INVOKED BY: E:\单片机\C51\BIN\C51.EXE jiaotongdeng.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\jiaotongdeng.lst) TABS(2) OBJECT(.\Objects\jiaotongdeng.obj)

line level    source

   1          #include<reg52.h>
   2          #include<intrins.h>
   3          #define uchar unsigned char 
   4          #define uint unsigned int 
   5          
   6          //数码管定义
   7          uchar code table[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xff};
   8          uchar code weixuan[]={0x01,0x02,0x04,0x08};
   9          uchar disbuf[4];
  10          
  11          
  12          sbit yellowled_nb=P0^3; //南北黄灯
  13          sbit yellowled_dx=P0^0; //东西黄灯
  14          sbit greenled_nb=P0^4; //南北绿灯
  15          sbit greenled_dx=P0^1;//东西绿灯
  16          sbit K1=P3^0; //时间+1
  17          sbit K2=P3^1;//时间-1
  18          sbit K3=P3^6;//功能键选择
  19          
  20          uchar  max_dx=10;//东西绿灯亮时间
  21          uchar  max_nb=10;//南北绿灯亮时间
  22          uchar  sec_nb;//南北数码管指示
  23          uchar  sec_dx;//东西数码管指示
  24          
  25          uchar flag_nb;
  26          uchar flag_dx;//黄灯控制
  27          uchar flag_all;//黄灯禁止
  28          uchar t;//黄灯闪烁时间
  29          int adjust_flag=-1;//功能选择
  30          
  31          
  32          uchar flag1,flag2;//flag1为1秒定时,flag2黄灯闪烁
  33          uchar data time,time1;//time为1秒定时,time1黄灯闪烁时间
  34          bit  set=0;// 控制方向变量
  35          
  36          
  37          void Delay_Ms(uchar ms)//延时函数
  38          {
  39   1        uchar i;
  40   1        while(ms--)
  41   1        {
  42   2         for(i=0;i<113;i++);
  43   2        }
  44   1      }
  45          //设置数码管
  46          void adjust_smg()
  47          {
  48   1        disbuf[1]=sec_nb/10; //十位
  49   1        if(disbuf[1]==0)
  50   1        { 
  51   2         disbuf[1]=10;
  52   2        }
  53   1        disbuf[0]=sec_nb%10; //个位
  54   1        //disbuf数组01是南北个十位
C51 COMPILER V9.54   JIAOTONGDENG                                                          11/18/2018 21:17:58 PAGE 2   

  55   1        disbuf[3]=sec_dx/10; //十位
  56   1        if(disbuf[3]==0)
  57   1        { 
  58   2      
  59   2          disbuf[3]=10;
  60   2        }
  61   1        disbuf[2]=sec_dx%10; //个位
  62   1      }
  63          
  64          void adjust_smg1()
  65          {
  66   1          disbuf[1]=max_nb/10; 
  67   1          if(disbuf[1]==0)
  68   1            {  
  69   2              disbuf[1]=10;  
  70   2            }
  71   1          disbuf[0]=max_nb%10; 
  72   1          disbuf[3]=max_dx/10; 
  73   1          if(disbuf[3]==0)
  74   1            {  
  75   2            disbuf[3]=10; 
  76   2            }
  77   1          disbuf[2]=max_dx%10;
  78   1      }
  79          
  80          void key1()//时间(+1)
  81          {
  82   1        if(adjust_flag==0&&flag_all!=1)
  83   1         {  
  84   2          max_nb++; 
  85   2          if(max_nb==100)
  86   2            max_nb=5;
  87   2          }
  88   1        else if(adjust_flag==1&&flag_all!=1)
  89   1        { 
  90   2        max_dx++;
  91   2        if( max_dx==100)
  92   2          max_dx=5;
  93   2        }
  94   1        if(adjust_flag!=-1&&flag_all!=1)
  95   1        {
  96   2          adjust_smg1();
  97   2        } 
  98   1       }
  99          
 100          
 101          void key2()//时间(-1)
 102          {
 103   1        if(adjust_flag==0&&flag_all!=1) 
 104   1        { 
 105   2         max_nb--;  
 106   2         if(max_nb==4)
 107   2         max_nb=99;
 108   2         }
 109   1        else if(adjust_flag==1&&flag_all!=1)
 110   1        { 
 111   2         max_dx--;  
 112   2         if(max_dx==4 )
 113   2          max_dx=99;
 114   2        }
 115   1        if(adjust_flag!=-1&&flag_all==0)
 116   1          {
C51 COMPILER V9.54   JIAOTONGDENG                                                          11/18/2018 21:17:58 PAGE 3   

 117   2           adjust_smg1();
 118   2          } 
 119   1       }
 120           
 121          void key3()//功能
 122          {
 123   1        adjust_flag++;
 124   1        if(adjust_flag>=2)
 125   1        {
 126   2        adjust_flag=-1;
 127   2        }
 128   1        if(adjust_flag==-1)
 129   1        { 
 130   2        if(flag_all==1)
 131   2          { 
 132   3          flag_all=0; 
 133   3          }
 134   2        sec_nb=max_nb-5;  
 135   2        sec_dx=max_nb;
 136   2        TR0=1;
 137   2        P0=0xeb;
 138   2        adjust_smg();
 139   2        }
 140   1        else
 141   1        {
 142   2        if(flag_all!=1)
 143   2        adjust_smg1();
 144   2        }
 145   1      }
 146          
 147          //按键选择
 148          
 149          
 150          void key() 
 151          { 
 152   1       if(K1==0)
 153   1        { 
 154   2        Delay_Ms(10);
 155   2        if(K1==0)
 156   2        { 
 157   3         key1();
 158   3         while(!K1);  
 159   3         }  
 160   2        }
 161   1       if(K2==0)
 162   1        {  
 163   2         Delay_Ms(10);
 164   2         if(K2==0)
 165   2          { 
 166   3          key2();
 167   3          while(!K2);
 168   3          } 
 169   2        }
 170   1       if(K3==0)
 171   1         { 
 172   2         Delay_Ms(10);
 173   2         if(K3==0)
 174   2          { 
 175   3          TR0=0;
 176   3          key3();
 177   3          while(!K3);
 178   3          }
C51 COMPILER V9.54   JIAOTONGDENG                                                          11/18/2018 21:17:58 PAGE 4   

 179   2        }
 180   1      }
 181          
 182          
 183          void adjust_Time()
 184          { 
 185   1        sec_dx--; sec_nb--;
 186   1        if(set==0)//南北通行
 187   1        { 
 188   2          if(sec_nb==0)
 189   2          {
 190   3            if(flag_nb==0)
 191   3            { 
 192   4             sec_nb=5;
 193   4             flag_nb=1;//  南北黄灯控制
 194   4             greenled_nb=1;  //  关绿灯
 195   4             yellowled_nb=0;//黄灯亮
 196   4            }
 197   3            else
 198   3            { 
 199   4             flag_nb=0;//南北黄灯控清零
 200   4             set=1;
 201   4             sec_dx=max_dx-5;
 202   4             sec_nb=max_dx;
 203   4             P0=0xdd;
 204   4            } 
 205   3           }  
 206   2         }
 207   1        else
 208   1        { 
 209   2          if(sec_dx==0)//东西通行
 210   2          {
 211   3            if(flag_dx==0)
 212   3            { 
 213   4              sec_dx=5;
 214   4              flag_dx=1;//东西黄灯控制
 215   4              greenled_dx=1;  // 东西关绿灯
 216   4              yellowled_dx=0;//  东西黄灯亮
 217   4             }
 218   3            else
 219   3            {
 220   4            flag_dx=0;//东西黄灯控制清零
 221   4            set=0;
 222   4            sec_dx=max_nb;
 223   4            sec_nb=max_nb-5;
 224   4            P0=0xeb;
 225   4            }
 226   3          }
 227   2        }
 228   1         adjust_smg();//刷新数码管指示
 229   1      }
 230          
 231          
 232          //数码管显示
 233          void display()
 234          {
 235   1        uchar i;
 236   1        for(i=0;i<4;i++)
 237   1        {
 238   2         P1=0x00;
 239   2         Delay_Ms(2);
 240   2         P2=table[disbuf[i]];
C51 COMPILER V9.54   JIAOTONGDENG                                                          11/18/2018 21:17:58 PAGE 5   

 241   2         P1=weixuan[i];
 242   2         Delay_Ms(4);
 243   2        }
 244   1      }
 245          
 246          //黄灯闪烁
 247          void yellowled()   
 248          {
 249   1         if(flag_nb==1)   //南北黄灯标志
 250   1         {
 251   2          yellowled_nb=~yellowled_nb;
 252   2         }
 253   1         else if(flag_dx==1)
 254   1         {
 255   2          yellowled_dx=~yellowled_dx;
 256   2         }
 257   1         if(flag_all==1)  //全部禁止
 258   1         {
 259   2           yellowled_nb=~yellowled_nb;
 260   2           yellowled_dx=~yellowled_dx;
 261   2           t++;  //黄灯闪烁时长
 262   2           if(t>=12)
 263   2           {
 264   3            t=0;  TR0=0; P0=0xdb;
 265   3           }  
 266   2         }
 267   1      }
 268          
 269          
 270          void Init()//中断初始化
 271          { 
 272   1        TMOD=0X61;
 273   1        TH0=0X3C;TL0=0XB0;
 274   1        TH1=0xff;TL1=0xff;
 275   1        ET0=1;  ET1=1;
 276   1        EX0=1;  IT0=1;
 277   1        EX1=1;  IT1=1;
 278   1        TR0=1;  TR1=1;
 279   1        EA=1;
 280   1        flag_nb=0;  flag_dx=0;
 281   1        set=0;//先设置南北方通行
 282   1        P0=0xeb;        
 283   1        sec_nb=max_nb-5;  
 284   1        sec_dx=max_nb;
 285   1        adjust_smg();
 286   1      }
 287          
 288          void time0( ) interrupt 1 
 289          {  
 290   1         TH0=0X3C; TL0=0XB0;
 291   1         time++;  time1++;
 292   1         //控制黄灯闪烁
 293   1         if(time1==10)
 294   1         { time1=0; flag2=1;  }
 295   1           if(time==20)
 296   1           {  
 297   2            time=0;flag1=1;
 298   2           }
 299   1      }
 300          
 301          void int0() interrupt 0   //东西强行按键
 302          { 
C51 COMPILER V9.54   JIAOTONGDENG                                                          11/18/2018 21:17:58 PAGE 6   

 303   1         //外部中断0，定时器停止，数码管不显示，东西绿灯亮，南北红灯亮
 304   1         uchar i;   TR0=0;
 305   1         for(i=0;i<4;i++)
 306   1         {
 307   2           disbuf[i]=10; 
 308   2         }
 309   1         P0=0xdd;
 310   1      }
 311          //南北强行按键        
 312          void int1()interrupt 2 using 1
 313          { 
 314   1        //外部中断1，定时器停止，数码管不显示，南北绿灯亮，东西红灯亮
 315   1        uchar i;  TR0=0;
 316   1        for(i=0;i<4;i++)
 317   1         {    
 318   2           disbuf[i]=10;   
 319   2         }
 320   1        P0=0xeb;
 321   1      }
 322          
 323          //全部禁止，紧急事件
 324          void time2() interrupt 3
 325          {  
 326   1         //全亮红灯
 327   1         uchar i;   TR0=1;
 328   1         flag_all=1;
 329   1         for(i=0;i<4;i++)
 330   1         {    
 331   2           disbuf[i]=10;
 332   2         }
 333   1         P0=0xf6;
 334   1      }
 335           
 336          
 337          
 338          void main()
 339          {  
 340   1       Init();
 341   1       while(1)
 342   1       { 
 343   2         key();
 344   2         if(flag1==1&&flag_all!=1)  //正常情况
 345   2         {
 346   3           adjust_Time();
 347   3           flag1=0; 
 348   3         }
 349   2         if(flag2==1)
 350   2         { 
 351   3         yellowled();
 352   3         flag2=0;
 353   3         }
 354   2         display(); 
 355   2       }
 356   1       
 357   1      }
 358          
 359          
 360          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    768    ----
C51 COMPILER V9.54   JIAOTONGDENG                                                          11/18/2018 21:17:58 PAGE 7   

   CONSTANT SIZE    =     15    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
