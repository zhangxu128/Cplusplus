#include<iostream>

using namespace std;
//题目描述
//工厂生产的产品包装在相同高度h，尺寸为1 * 1, 2 * 2，3 * 3，4 * 4，5 * 5，6 * 6的方形包装中。 
//这些产品始终以与产品高度相同的尺寸为6 * 6的包裹交付给客户。因为邮费很贵，
//所以工厂要想方设法的减小每个订单运送时的包裹数量。
//他们很需要有一个好的程序帮他们解决这个问题从而节省费用。现在这个程序由你来设计。
//输入描述 :
//输入文件包括几行，每一行代表一个订单。每个订单里的一行包括六个整数，中间用空格隔开，
//分别为 1 * 1 至 6 * 6 这六种产品的数量。输入文件将以 6 个 0 组成的一行结尾。
//输出描述 :
//除了输入的最后一行 6 个 0 以外，输入文件里每一行对应着输出文件的一行，
//每一行输出一个整数代表对应的订单所需的最小包裹数。
//示例1
//输入
//0 0 4 0 0 1
//7 5 1 0 0 0
//0 0 0 0 0 0
//输出
//2
//1


//思路：  排列组合问题
//先装大箱子，后搭小箱子 


int main()
{
	int arr[7];
	while (cin >> arr[1] >> arr[2] >> arr[3] >> arr[4] >> arr[5] >> arr[6])
	{
		if (((!arr[1] && !arr[2]) && (!arr[3] && !arr[4])) && (!arr[5] && !arr[6]))
			return 0;//判断输入结束
		int x;
		int can1, can2, would1, would2; //分别存放可以容纳的细碎的小块和实际输出
		can2 = 5 * arr[4] + (4 - arr[3] % 4);
		if (arr[2] > can2)
		{
			would2 = (arr[2] - can2) / 9 + 1;
			can1 = 11 * arr[5] + (4 - arr[3] % 4) * 5 + (9 - (arr[2] - can2) % 9) * 4;
		}
		else
		{
			would2 = 0;
			can1 = 11 * arr[5] + 20 * arr[4] + (4 - arr[3] % 4) * 9 - 4 * arr[2];
		}
		if (arr[1] > can1)
		{
			would1 = (arr[1] - can1) / 36 + 1;
		}
		else
		{
			would1 = 0;
		}
		x = arr[6] + arr[5] + arr[4] + ceil(double(arr[3]) / 4) + would2 + would1;
		cout << x << endl;
	}
}