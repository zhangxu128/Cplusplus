//给定 S 和 T 两个字符串，当它们分别被输入到空白的文本编辑器后，
//判断二者是否相等，并返回结果。 # 代表退格字符。
//示例 1：
//输入：S = "ab#c", T = "ad#c"
//输出：true
//解释：S 和 T 都会变成 “ac”。
//示例 2：
//输入：S = "ab##", T = "c#d#"
//输出：true
//解释：S 和 T 都会变成 “”。
//示例 3：
//输入：S = "a##c", T = "#a#c"
//输出：true
//解释：S 和 T 都会变成 “c”。
//示例 4：
//输入：S = "a#c", T = "b"
//输出：false
//解释：S 会变成 “c”，但 T 仍然是 “b”。
//提示：
//1 <= S.length <= 200
//1 <= T.length <= 200
//S 和 T 只含有小写字母以及字符 '#'。

#include <iostream>
#include <string>
#include <stack>

using namespace std;


bool backspaceCompare(string S, string T) {
	stack<char> stack1,stack2;
	for (int i = 0; i < S.size(); i++) {
		if (S[i] != '#') {
			stack1.push(S[i]);
		}
		if (S[i] == '#' && !stack1.empty()) {
			stack1.pop();
		}
	}
	for (int i = 0; i < T.size(); i++) {
		if (S[i] != '#') {
			stack2.push(S[i]);
		}
		if (S[i] == '#' && !stack2.empty()) {
			stack2.pop();
		}
	}
	if (stack1 == stack2) {
		return true;
	}
	return false;
}

int main() {


	string s;
	string t;
	cin >> s >> t;

	if (backspaceCompare(s, t)) {
		cout << true << endl;
	}
	else {
		cout << false << endl;
	}
	system("pause");
	return 0;
}
